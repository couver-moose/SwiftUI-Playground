//
//  Parallax.swift
//  SwiftUI-Playground
//
//  Created by Dario Da√üler on 30.03.25.
//

import SwiftUI

struct StretchyHeaderView: View {
    let mountainNames = [
        "Matterhorn ‚Äì Schweiz",
        "Mont Blanc ‚Äì Frankreich/Italien",
        "Zugspitze ‚Äì Deutschland",
        "Gro√üglockner ‚Äì √ñsterreich",
        "Dolomiten ‚Äì Italien",
        "Mount Fuji ‚Äì Japan",
        "Mount Everest ‚Äì Nepal",
        "Rocky Mountains ‚Äì USA/Kanada",
        "Table Mountain ‚Äì S√ºdafrika",
        "Ben Nevis ‚Äì Schottland",
        "Andes ‚Äì S√ºdamerika",
        "Himalaya ‚Äì Asien",
        "Kilimandscharo ‚Äì Tansania",
        "Mount Rainier ‚Äì USA",
        "Mount Elbrus ‚Äì Russland",
        "Jungfrau ‚Äì Schweiz",
        "Mount Cook ‚Äì Neuseeland",
        "Tatra ‚Äì Polen/Slowakei",
        "Sierra Nevada ‚Äì Spanien",
        "Snowdon ‚Äì Wales"
    ]

    var body: some View {
        ScrollView {
            VStack(spacing: 0) {
                let height = 250.0
                GeometryReader { geometry in
                    let offset = geometry.frame(in: .global).minY
                    
                    Image("mountains") // Bild aus Assets
                        .resizable()
                        .scaledToFill()
                        .frame(width: UIScreen.main.bounds.width)
                        .frame(height: offset > 0 ? height + offset : height)
                        .clipped()
                        .offset(y: -offset)
                }
                .frame(height: height) // Startgr√∂√üe des Headers
                
                // Inhalt der ScrollView
                VStack(alignment: .leading, spacing: 16) {
                    Text("üôÜüèΩ‚Äç‚ôÇÔ∏è Parallax Effekt")
                        .font(.largeTitle)
                        .fontWeight(.bold)
                    ForEach(mountainNames, id: \.self) { name in
                        Text(name)
                            .padding()
                            .frame(maxWidth: .infinity)
                            .background(Color(.secondarySystemBackground))
                            .cornerRadius(10)
                    }
                }
                .padding()
                .background(
                    RoundedRectangle(cornerRadius: 10, style: .continuous)
                        .fill(Color(.systemBackground))
                )
                .offset(y: -10)
            }
        }
    }
}

#Preview {
    NavigationStack {
        StretchyHeaderView()
    }
}
